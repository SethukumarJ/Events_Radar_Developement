basePath: /
definitions:
  domain.Admins:
    properties:
      adminid:
        type: integer
      adminname:
        maxLength: 50
        minLength: 2
        type: string
      email:
        type: string
      password:
        type: string
      phonenumber:
        type: string
      verification:
        type: boolean
    required:
    - adminname
    - email
    - password
    type: object
  domain.Events:
    properties:
      applicationclosingdate:
        type: string
      applicationlink:
        type: string
      approved:
        type: boolean
      archived:
        type: boolean
      createdat:
        type: string
      cusatonly:
        type: boolean
      eventdate:
        type: string
      eventid:
        type: integer
      eventpic:
        type: string
      location:
        type: string
      longdiscription:
        type: string
      maxapplications:
        type: integer
      online:
        type: boolean
      organizername:
        type: string
      paid:
        type: boolean
      sex:
        type: string
      shortdiscription:
        type: string
      subevents:
        type: string
      title:
        maxLength: 50
        minLength: 2
        type: string
      websitelink:
        type: string
    required:
    - eventdate
    - eventpic
    - organizername
    - title
    type: object
  domain.Users:
    properties:
      email:
        type: string
      eventid:
        type: integer
      firstname:
        maxLength: 50
        minLength: 2
        type: string
      lastname:
        maxLength: 50
        minLength: 1
        type: string
      password:
        type: string
      phonenumber:
        type: string
      profile:
        type: string
      userid:
        type: integer
      username:
        maxLength: 50
        minLength: 2
        type: string
      verification:
        type: boolean
      vip:
        type: boolean
    required:
    - email
    - firstname
    - lastname
    - password
    - username
    type: object
  response.Response:
    properties:
      data: {}
      errors: {}
      message:
        type: string
      status:
        type: boolean
    type: object
host: localhost:3000
info:
  contact:
    email: sethukumarj.76@gmail.com
    name: API Support
    url: sethukumarj.com
  description: This is an Events Radar project. You can visit the GitHub repository
    at https://github.com/SethukumarJ/Events_Radar_Developement
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Go + Gin Radar API
  version: "1.0"
paths:
  /admin/approveevent:
    patch:
      operationId: approves event
      parameters:
      - description: 'Event Name : '
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: approves the event for admin
      tags:
      - Admin
  /admin/event/create:
    post:
      operationId: Create event from admin
      parameters:
      - description: Create event
        in: body
        name: CreateEvent
        required: true
        schema:
          $ref: '#/definitions/domain.Events'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Create event
      tags:
      - Admin
  /admin/listEvents:
    get:
      operationId: list all upcoming events
      parameters:
      - description: 'Page number: '
        in: query
        name: page
        required: true
        type: string
      - description: 'Page capacity : '
        in: query
        name: pagesize
        required: true
        type: string
      - description: 'List event by approved non approved : '
        in: query
        name: approved
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: list all upcoming events for admin
      tags:
      - Admin
  /admin/listUsers:
    get:
      operationId: list all active users
      parameters:
      - description: 'Page number: '
        in: query
        name: page
        required: true
        type: string
      - description: 'Page capacity : '
        in: query
        name: pagesize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: list all active users for admin
      tags:
      - Admin
  /admin/login:
    post:
      operationId: Admin Login
      parameters:
      - description: 'adminlogin: '
        in: body
        name: AdminLogin
        required: true
        schema:
          $ref: '#/definitions/domain.Admins'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login for Admin
      tags:
      - Admin
      - Admin
  /admin/signup:
    post:
      operationId: SignUp authentication
      parameters:
      - description: admin signup with username, phonenumber email ,password
        in: body
        name: RegisterAdmin
        required: true
        schema:
          $ref: '#/definitions/domain.Admins'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: SignUp for Admin
      tags:
      - Admin
      - Admin
  /admin/token/refresh:
    post:
      operationId: Admin RefreshToken
      parameters:
      - description: 'token string: '
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Refresh token for admin
      tags:
      - Admin
      - Admin
  /admin/vipuser:
    patch:
      operationId: make vip user
      parameters:
      - description: 'User Name : '
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: makes the user vip
      tags:
      - Admin
  /event/approved:
    get:
      operationId: list all approved events
      parameters:
      - description: 'Page number: '
        in: query
        name: page
        required: true
        type: string
      - description: 'Page capacity : '
        in: query
        name: pagesize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: list all approved upcoming events
      tags:
      - Event
  /event/delete:
    delete:
      operationId: Delete event
      parameters:
      - description: 'Title: '
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: delete event
      tags:
      - Event
  /event/geteventbytitle:
    get:
      operationId: Get event by id
      parameters:
      - description: 'Title: '
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: delete event
      tags:
      - Event
  /event/update:
    patch:
      operationId: Update event
      parameters:
      - description: 'Title: '
        in: query
        name: title
        required: true
        type: string
      - description: update event with new body
        in: body
        name: Updateevent
        required: true
        schema:
          $ref: '#/definitions/domain.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: update event
      tags:
      - User
  /user/event/create:
    post:
      operationId: Create event from user
      parameters:
      - description: Create event
        in: body
        name: CreateEvent
        required: true
        schema:
          $ref: '#/definitions/domain.Events'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Create event
      tags:
      - User
  /user/login:
    post:
      operationId: User Login
      parameters:
      - description: 'userlogin: '
        in: body
        name: UserLogin
        required: true
        schema:
          $ref: '#/definitions/domain.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login for users
      tags:
      - User
      - User
  /user/signup:
    post:
      operationId: User SignUp
      parameters:
      - description: user signup with username, phonenumber email ,password
        in: body
        name: RegisterUser
        required: true
        schema:
          $ref: '#/definitions/domain.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: SignUp for users
      tags:
      - User
  /user/token/refresh:
    post:
      operationId: User RefreshToken
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Refresh token for users
      tags:
      - User
      - User
  /user/verify/account:
    delete:
      operationId: Verify account
      parameters:
      - description: 'Email: '
        in: query
        name: Email
        required: true
        type: string
      - description: 'code: '
        in: query
        name: Code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify account
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
